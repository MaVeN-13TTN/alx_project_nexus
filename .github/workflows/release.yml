name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git commits
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            ## Changes in this Release
            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Docker Images
            - `ghcr.io/${{ github.repository }}:${{ github.ref_name }}`
            - `ghcr.io/${{ github.repository }}:latest`

            ## Deployment
            This release has been automatically deployed to production.
          draft: false
          prerelease: false

  deploy-release:
    runs-on: ubuntu-latest
    name: Deploy Release
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Update production deployment with release tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if ! sed -i "s|image: ghcr.io/${{ github.repository }}:.*|image: ghcr.io/${{ github.repository }}:${TAG_NAME}|g" docker-compose.vps.yml; then
            echo "Error: Failed to update Docker Compose image"
            exit 1
          fi
          echo "Updated production Docker Compose to use release: ${TAG_NAME}"

      - name: Commit and push release deployment
        env:
          GIT_AUTHOR_EMAIL: "${{ github.actor }}@users.noreply.github.com"
          GIT_AUTHOR_NAME: "${{ github.actor }}"
        run: |
          git config --local user.email "${GIT_AUTHOR_EMAIL}"
          git config --local user.name "${GIT_AUTHOR_NAME}"
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git add docker-compose.vps.yml
          if ! git commit -m "chore: deploy release ${GITHUB_REF#refs/tags/} to production"; then
            echo "Error: Failed to commit changes"
            exit 1
          fi
          if ! git push; then
            echo "Error: Failed to push changes"
            exit 1
          fi
