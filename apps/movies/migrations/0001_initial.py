# Generated by Django 4.2.23 on 2025-08-09 21:22

from decimal import Decimal
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.PositiveIntegerField(help_text='The Movie Database genre ID', unique=True)),
                ('name', models.CharField(help_text="Genre name (e.g., 'Action', 'Comedy', 'Drama')", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the genre was added to the database')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.PositiveIntegerField(help_text='The Movie Database movie ID', unique=True)),
                ('title', models.CharField(db_index=True, help_text='Movie title', max_length=255)),
                ('original_title', models.CharField(blank=True, help_text='Original movie title (if different from title)', max_length=255)),
                ('overview', models.TextField(blank=True, help_text='Movie plot summary/overview')),
                ('tagline', models.CharField(blank=True, help_text='Movie tagline', max_length=500)),
                ('release_date', models.DateField(blank=True, help_text='Movie release date', null=True)),
                ('status', models.CharField(blank=True, help_text="Release status (e.g., 'Released', 'In Production')", max_length=50)),
                ('poster_path', models.CharField(blank=True, help_text='Poster image URL path from TMDb', max_length=255)),
                ('backdrop_path', models.CharField(blank=True, help_text='Backdrop image URL path from TMDb', max_length=255)),
                ('vote_average', models.DecimalField(decimal_places=1, default=Decimal('0.0'), help_text='Average user rating (0.0-10.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('vote_count', models.PositiveIntegerField(default=0, help_text='Number of votes/ratings')),
                ('popularity', models.DecimalField(decimal_places=3, default=Decimal('0.0'), help_text='TMDb popularity score', max_digits=10)),
                ('runtime', models.PositiveIntegerField(blank=True, help_text='Movie duration in minutes', null=True)),
                ('budget', models.PositiveBigIntegerField(blank=True, help_text='Movie budget in USD', null=True)),
                ('revenue', models.PositiveBigIntegerField(blank=True, help_text='Movie revenue in USD', null=True)),
                ('original_language', models.CharField(blank=True, help_text='Original language code (ISO 639-1)', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the movie was added to the database')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the movie was last updated')),
                ('genres', models.ManyToManyField(blank=True, help_text='Movie genres', related_name='movies', to='movies.genre')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'ordering': ['-popularity', '-vote_average'],
            },
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['tmdb_id'], name='movies_genr_tmdb_id_4ed139_idx'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['name'], name='movies_genr_name_850734_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['tmdb_id'], name='movies_movi_tmdb_id_0e4cad_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['title'], name='movies_movi_title_652549_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_date'], name='movies_movi_release_b7ac7d_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['vote_average'], name='movies_movi_vote_av_ca6eee_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['popularity'], name='movies_movi_popular_114287_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['created_at'], name='movies_movi_created_619207_idx'),
        ),
    ]
