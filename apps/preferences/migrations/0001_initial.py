# Generated by Django 4.2.23 on 2025-08-09 21:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('movies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ViewingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_at', models.DateTimeField(auto_now_add=True, help_text='When the movie was watched')),
                ('completion_percentage', models.PositiveSmallIntegerField(default=100, help_text='Percentage of movie completed (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('liked', models.BooleanField(blank=True, help_text='Whether the user liked the movie (null = no feedback)', null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1 star'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')], help_text="User's rating (1-5 stars)", null=True)),
                ('movie', models.ForeignKey(help_text='Movie that was viewed', on_delete=django.db.models.deletion.CASCADE, related_name='viewed_by', to='movies.movie')),
                ('user', models.ForeignKey(help_text='User who viewed the movie', on_delete=django.db.models.deletion.CASCADE, related_name='viewing_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Viewing History',
                'verbose_name_plural': 'Viewing Histories',
                'ordering': ['-watched_at'],
                'indexes': [models.Index(fields=['user', 'watched_at'], name='preferences_user_id_b9eac8_idx'), models.Index(fields=['movie', 'watched_at'], name='preferences_movie_i_d80b10_idx'), models.Index(fields=['user', 'liked'], name='preferences_user_id_2fa7e3_idx')],
                'unique_together': {('user', 'movie', 'watched_at')},
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_decades', models.CharField(blank=True, help_text="Comma-separated list of preferred decades (e.g., '1990s,2000s,2010s')", max_length=200)),
                ('min_rating', models.DecimalField(blank=True, decimal_places=1, help_text='Minimum TMDb rating for recommendations', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('max_runtime', models.PositiveIntegerField(blank=True, help_text='Maximum movie runtime in minutes for recommendations', null=True)),
                ('preferred_languages', models.CharField(blank=True, help_text='Comma-separated list of preferred language codes (ISO 639-1)', max_length=100)),
                ('include_foreign_films', models.BooleanField(default=True, help_text='Include non-English movies in recommendations')),
                ('recommendation_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('never', 'Never')], default='weekly', help_text='How often to receive new recommendations', max_length=20)),
                ('enable_email_recommendations', models.BooleanField(default=False, help_text='Send recommendations via email')),
                ('include_adult_content', models.BooleanField(default=False, help_text='Include adult content in recommendations')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When preferences were first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When preferences were last updated')),
                ('avoid_genres', models.ManyToManyField(blank=True, help_text='Genres to avoid in recommendations', related_name='avoided_by_users', to='movies.genre')),
                ('genres', models.ManyToManyField(blank=True, help_text="User's preferred movie genres", related_name='preferred_by_users', to='movies.genre')),
                ('user', models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='preference', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
                'indexes': [models.Index(fields=['user'], name='preferences_user_id_be46b2_idx'), models.Index(fields=['updated_at'], name='preferences_updated_44271a_idx'), models.Index(fields=['recommendation_frequency'], name='preferences_recomme_86264c_idx')],
            },
        ),
    ]
