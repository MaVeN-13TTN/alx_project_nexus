apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-recommendation-api
  namespace: staging
  labels:
    app: movie-recommendation-api
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: movie-recommendation-api
      environment: staging
  template:
    metadata:
      labels:
        app: movie-recommendation-api
        environment: staging
    spec:
      containers:
      - name: api
        image: ghcr.io/maven-13ttn/alx_project_nexus:main-latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: DEBUG
          value: "False"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: secret-key
        - name: DB_NAME
          value: "movie_recommendation_staging"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: db-host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: db-password
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: redis-url
        - name: TMDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: movie-api-secrets
              key: tmdb-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: movie-recommendation-api-service
  namespace: staging
  labels:
    app: movie-recommendation-api
    environment: staging
spec:
  selector:
    app: movie-recommendation-api
    environment: staging
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: movie-recommendation-api-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - staging.movierecommendation.app
    secretName: staging-tls-secret
  rules:
  - host: staging.movierecommendation.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: movie-recommendation-api-service
            port:
              number: 80
