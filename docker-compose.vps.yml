services:
  # PostgreSQL Database for VPS (Multi-Environment)
  db:
    image: postgres:15
    container_name: nexus_vps_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-movie_recommendation_prod}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: |
      bash -c '
      docker-entrypoint.sh postgres &
      sleep 10
      createdb -U ${DB_USER} movie_recommendation_staging || true
      wait
      '
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache for VPS
  redis:
    image: redis:7-alpine
    container_name: nexus_vps_redis
    restart: unless-stopped
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Application for VPS
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nexus_vps_web
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-config.settings.multi_environment}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME:-movie_recommendation_prod}
      - REDIS_URL=redis://redis:6379/0
      - TMDB_API_KEY=${TMDB_API_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-nexus.k1nyanjui.com,staging-nexus.k1nyanjui.com,161.97.116.5,localhost}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://nexus.k1nyanjui.com,https://staging-nexus.k1nyanjui.com}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-https://nexus.k1nyanjui.com,https://staging-nexus.k1nyanjui.com}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-True}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-True}
      - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE:-True}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nexus_network
      - nginx_proxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      # Nginx Proxy Manager labels
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.rule=Host(`nexus.k1nyanjui.com`)"
      - "traefik.http.routers.nexus.tls=true"
      - "traefik.http.routers.nexus.tls.certresolver=letsencrypt"

volumes:
  postgres_data:
    driver: local

networks:
  nexus_network:
    driver: bridge
  nginx_proxy:
    external: true
    name: nginx-proxy
